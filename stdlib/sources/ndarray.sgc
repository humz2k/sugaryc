#include <ndarray.sgh>

extern int* _index_int_array(int_array arr, int* idxs, int nidx);

extern long int* _index_long_int_array(long_array arr, int* idxs, int nidx);

extern float* _index_float_array(float_array arr, int* idxs, int nidx);

extern double* _index_double_array(double_array arr, int* idxs, int nidx);

int* __index__(int_array arr, int* idxs, int nidx){
    return _index_int_array(arr,idxs,nidx);
}

long int* __index__(long_array arr, int* idxs, int nidx){
    return _index_long_int_array(arr,idxs,nidx);
}

float* __index__(float_array arr, int* idxs, int nidx){
    return _index_float_array(arr,idxs,nidx);
}

double* __index__(double_array arr, int* idxs, int nidx){
    return _index_double_array(arr,idxs,nidx);
}

extern int _get_ndims_int_array(int_array arr);

extern int _get_ndims_long_int_array(long_array arr);

extern int _get_ndims_float_array(float_array arr);

extern int _get_ndims_double_array(double_array arr);

int ndims(int_array arr){
    return _get_ndims_int_array(arr);
}

int ndims(long_array arr){
    return _get_ndims_long_int_array(arr);
}

int ndims(float_array arr){
    return _get_ndims_float_array(arr);
}

int ndims(double_array arr){
    return _get_ndims_double_array(arr);
}


extern int* _get_dims_int_array(int_array arr);
extern int* _get_dims_long_int_array(long_array arr);
extern int* _get_dims_float_array(float_array arr);
extern int* _get_dims_double_array(double_array arr);

int_tuple dims(int_array arr){
    return make_int_tuple(_get_dims_int_array(arr),arr.ndims());
}

int_tuple dims(long_array arr){
    return make_int_tuple(_get_dims_long_int_array(arr),arr.ndims());
}

int_tuple dims(float_array arr){
    return make_int_tuple(_get_dims_float_array(arr),arr.ndims());
}

int_tuple dims(double_array arr){
    return make_int_tuple(_get_dims_double_array(arr),arr.ndims());
}